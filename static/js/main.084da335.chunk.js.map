{"version":3,"sources":["comp/assets/skype.svg","comp/assets/github.svg","comp/assets/linkedin.svg","comp/assets/gmail.svg","comp/assets/avatarsmall.jpg","comp/Menu.js","context/ThemeContext.js","comp/Home.js","comp/Contact.js","comp/About.js","comp/Projects.js","comp/Portfolio.js","comp/Gallery.js","comp/Container.js","context/ThemeState.js","context/types.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Menu","props","trigger","menuOpen","className","overlayOn","onKeyDown","tabIndex","onClick","activeClassName","to","themeContext","createContext","Home","theme","useContext","ThemeContext","useState","menuOn","setMenuOn","Contact","src","gmailLogo","height","width","linkedLogo","href","target","skypeLogo","style","fontStyle","textDecoration","gitLogo","About","avatar","Projects","alt","Portfolio","Gallery","Container","toggleTheme","type","id","value","e","checked","console","log","document","body","background","exact","path","component","render","ThemeState","useReducer","state","action","payload","dispatch","Provider","apptheme","children","App","Boolean","window","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.084da335.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/skype.41c7b258.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.50feef6b.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkedin.7b73924a.svg\";","module.exports = __webpack_public_path__ + \"static/media/gmail.64361c93.svg\";","module.exports = __webpack_public_path__ + \"static/media/avatarsmall.66d17b25.jpg\";","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Menu = props => {\r\n  const trigger = () => props.menuOpen(false);\r\n\r\n  return (\r\n    <div\r\n      className={props.overlayOn ? 'menu overlay' : 'menu'}\r\n      onKeyDown={trigger}\r\n      tabIndex='0'\r\n    >\r\n      <div className='menu-x' onClick={trigger}>\r\n        &times;\r\n      </div>\r\n      <li>\r\n        <NavLink activeClassName='menu-item' to='about'>\r\n          About Me\r\n        </NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink activeClassName='menu-item' to='portfolio'>\r\n          Portfolio\r\n        </NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink activeClassName='menu-item' to='contact'>\r\n          Contact\r\n        </NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink activeClassName='menu-item' to='gallery'>\r\n          Gallery\r\n        </NavLink>\r\n      </li>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import { createContext } from 'react';\r\n\r\nconst themeContext = createContext();\r\n\r\nexport default themeContext;\r\n","import React, { useState, Fragment } from 'react';\r\nimport Menu from './Menu';\r\nimport ThemeContext from '../context/ThemeContext';\r\nimport { useContext } from 'react';\r\n\r\nconst Home = props => {\r\n  const themeContext = useContext(ThemeContext);\r\n  const { theme } = themeContext;\r\n\r\n  const [menuOn, setMenuOn] = useState(false);\r\n\r\n  const trigger = () => {\r\n    setMenuOn(!menuOn);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Menu overlayOn={menuOn} menuOpen={trigger} />\r\n      <div className={'home ' + (theme == 'day' ? '' : 'night')}>\r\n        <p className={'name ' + (theme == 'day' ? '' : 'night')}>\r\n          utku tekalmaz\r\n        </p>\r\n        <p className={'tag ' + (theme == 'day' ? '' : 'night')}>\r\n          front-end & mobile developer\r\n        </p>\r\n        <a\r\n          onClick={trigger}\r\n          className={'more ' + (theme == 'day' ? '' : 'night')}\r\n        >\r\n          more... ¶\r\n        </a>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { Fragment, useState } from 'react';\r\nimport skypeLogo from './assets/skype.svg';\r\nimport gitLogo from './assets/github.svg';\r\nimport linkedLogo from './assets/linkedin.svg';\r\nimport gmailLogo from './assets/gmail.svg';\r\nimport Menu from './Menu';\r\nimport ThemeContext from '../context/ThemeContext';\r\nimport { useContext } from 'react';\r\n\r\nconst Contact = () => {\r\n  const themeContext = useContext(ThemeContext);\r\n  const { theme } = themeContext;\r\n  const [menuOn, setMenuOn] = useState(false);\r\n\r\n  const trigger = () => {\r\n    setMenuOn(!menuOn);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Menu overlayOn={menuOn} menuOpen={trigger} />\r\n      <div className='info-box'>\r\n        <div className='contact'>\r\n          <h1 className={theme == 'day' ? 'day' : 'night'}>Reach me Out!</h1>\r\n          <p>\r\n            {' '}\r\n            <img src={gmailLogo} height='22px' width='22px' />{' '}\r\n            <span className={'url tag ' + (theme == 'day' ? '' : 'night')}>\r\n              e-mail:\r\n            </span>{' '}\r\n            <span className={'url ' + (theme == 'day' ? '' : 'night')}>\r\n              utkutekalmaz@gmail.com\r\n            </span>\r\n          </p>\r\n          <p>\r\n            {' '}\r\n            <img src={linkedLogo} height='22px' width='22px' />{' '}\r\n            <span className={'url tag ' + (theme == 'day' ? '' : 'night')}>\r\n              linkedin:\r\n            </span>{' '}\r\n            <a\r\n              href='https://linkedin.com/in/utku-tekalmaz'\r\n              target='_blank'\r\n              className={'url ' + (theme == 'day' ? '' : 'night')}\r\n            >\r\n              <span className={'url ' + (theme == 'day' ? '' : 'night')}>\r\n                in/utku-tekalmaz\r\n              </span>\r\n            </a>\r\n          </p>\r\n          <p>\r\n            {' '}\r\n            <img src={skypeLogo} height='22px' width='22px' />{' '}\r\n            <span className={'url tag ' + (theme == 'day' ? '' : 'night')}>\r\n              skype:\r\n            </span>{' '}\r\n            <a\r\n              href='https://join.skype.com/invite/fDfNaEadu7fq'\r\n              target='_blank'\r\n              className={'url ' + (theme == 'day' ? '' : 'night')}\r\n            >\r\n              <span\r\n                className={theme == 'day' ? 'day' : 'night'}\r\n                style={{ fontStyle: 'italic', textDecoration: 'underline' }}\r\n              >\r\n                invitation link!\r\n              </span>\r\n            </a>\r\n          </p>\r\n          <p>\r\n            {' '}\r\n            <img src={gitLogo} />{' '}\r\n            <span className={'url tag ' + (theme == 'day' ? '' : 'night')}>\r\n              github:\r\n            </span>{' '}\r\n            <a\r\n              href='https://www.github.com/utkutekalmaz'\r\n              target='_blank'\r\n              className={'url ' + (theme == 'day' ? 'day' : 'night')}\r\n            >\r\n              github.com/utkutekalmaz\r\n            </a>\r\n          </p>\r\n          <div className='mr30'>\r\n            <a\r\n              onClick={trigger}\r\n              className={theme == 'day' ? 'more-day' : 'more-night'}\r\n            >\r\n              more... ¶\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import React, { useState, Fragment } from 'react';\r\nimport Menu from './Menu';\r\nimport avatar from './assets/avatarsmall.jpg';\r\nimport ThemeContext from '../context/ThemeContext';\r\nimport { useContext } from 'react';\r\n\r\nconst About = () => {\r\n  const [menuOn, setMenuOn] = useState(false);\r\n  const themeContext = useContext(ThemeContext);\r\n  const { theme } = themeContext;\r\n\r\n  const trigger = () => {\r\n    setMenuOn(!menuOn);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Menu overlayOn={menuOn} menuOpen={trigger} />\r\n      <div className={'about-box ' + (theme == 'day' ? '' : 'night')}>\r\n        <div className={'summary ' + (theme == 'day' ? '' : 'night')}>\r\n          <img src={avatar} className='avatar' />\r\n          Hi,\r\n          <br />\r\n          <span className={'bld ' + (theme == 'day' ? 'day' : 'night')}>\r\n            Utku\r\n          </span>{' '}\r\n          speaking here,\r\n          <br />\r\n          The coding Hobbit. <br />\r\n          and maybe the developer of your needs.\r\n          <br />\r\n          If you're reading this, you are in a search of some personal data of\r\n          me.\r\n          <br />\r\n          So let's not waste your time &#128516; <br />\r\n          <br />\r\n          I was born in Tokat which is a small city in Turkey. <br />\r\n          Educated from{' '}\r\n          <span className={'bld ' + (theme == 'day' ? 'day' : 'night')}>\r\n            Tokat Science High School\r\n          </span>\r\n          <span className={'sub ' + (theme == 'day' ? '' : 'night')}>\r\n            `which was cool back then`\r\n          </span>\r\n          <br />\r\n          and my{' '}\r\n          <span className={'bld ' + (theme == 'day' ? 'day' : 'night')}>\r\n            Kocaeli University\r\n          </span>{' '}\r\n          journey began. <br />\r\n          After obtaining my{' '}\r\n          <span className={'bld ' + (theme == 'day' ? 'day' : 'night')}>\r\n            Bachelor's Degree in Electronics and Communication\r\n          </span>{' '}\r\n          <br />\r\n          started working as Software Developer in the industry.\r\n          <br />\r\n          I've made various apps in many industries using different languages\r\n          and frameworks.\r\n          <span className={'sub ' + (theme == 'day' ? '' : 'night')}>\r\n            `you can examine some of them on my curriculum vitae and some other\r\n            in my portfolio` <br />\r\n          </span>{' '}\r\n          Delightfully fluent in English and a noobie German `sprecher`.\r\n          <br />\r\n          <br />I spend my spare time mostly with movies and theatre activities.\r\n          <br />\r\n          Apart from that, I like to play computer games that has deep lores.\r\n          <br />I am always faschinated by{' '}\r\n          <span className={'bld ' + (theme == 'day' ? 'day' : 'night')}>\r\n            talented storytellers\r\n          </span>{' '}\r\n          and willing to listen to their stories; whatever the `media` is.\r\n          <br />\r\n          <br /> So <br />\r\n          <br />\r\n          <span className={'bld ' + (theme == 'day' ? 'day' : 'night')}>\r\n            “Do you wish me a good coding, or mean that it is a nice piece of\r\n            code whether I want it or not; or that you feel good about this\r\n            coding; or that it is a coding to feel good about?”\r\n          </span>\r\n        </div>\r\n        <div className={'about-more ' + (theme == 'day' ? '' : 'night')}>\r\n          <a\r\n            onClick={trigger}\r\n            className={theme == 'day' ? 'more-day' : 'more-night'}\r\n          >\r\n            more... ¶\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from 'react';\r\nimport ThemeContext from '../context/ThemeContext';\r\nimport { useContext } from 'react';\r\n\r\nconst Projects = () => {\r\n  const themeContext = useContext(ThemeContext);\r\n  const { theme } = themeContext;\r\n\r\n  return (\r\n    <div className='projects'>\r\n      <div className='project'>\r\n        <p className={'p-name ' + (theme == 'day' ? 'day' : 'night')}>\r\n          Github Finder\r\n        </p>\r\n        <div className='p-img'>\r\n          <img\r\n            src='https://raw.githubusercontent.com/utkutekalmaz/github-user-search-react/master/pics/pictwo.png'\r\n            alt='day'\r\n          />\r\n        </div>\r\n        <p className={'p-desc ' + (theme == 'day' ? 'day' : 'night')}>\r\n          A Github user search app made with{' '}\r\n          <span className={'bld ' + (theme == 'day' ? 'day' : 'night')}>\r\n            React Js{' '}\r\n          </span>\r\n          <br />\r\n          Mobile responsive and deployed to{' '}\r\n          <span className={'bld ' + (theme == 'day' ? 'day' : 'night')}>\r\n            Netlify\r\n          </span>\r\n          .\r\n          <span className={'bld ' + (theme == 'day' ? 'day' : 'night')}>\r\n            {' '}\r\n            Context API\r\n          </span>{' '}\r\n          is used for State Management. Requests made with{' '}\r\n          <span className={'bld ' + (theme == 'day' ? 'day' : 'night')}>\r\n            Axios\r\n          </span>\r\n          .\r\n        </p>\r\n        <p>\r\n          {' '}\r\n          <a\r\n            href='https://utkutekalmaz-githubfinder.netlify.com'\r\n            className={'p-demo bld ' + (theme == 'day' ? 'day' : 'night')}\r\n          >\r\n            Live Demo\r\n          </a>{' '}\r\n          <a\r\n            href='https://github.com/utkutekalmaz/github-user-search-react'\r\n            className={'p-code bld ' + (theme == 'day' ? 'day' : 'night')}\r\n          >\r\n            {' '}\r\n            {`{ Peek Code on Github }`}{' '}\r\n          </a>{' '}\r\n        </p>\r\n        <div className='seperator' />\r\n      </div>\r\n      {/*                      */}\r\n      <div className='project'>\r\n        <p className={'p-name ' + (theme == 'day' ? 'day' : 'night')}>\r\n          Contact Keeper\r\n        </p>\r\n        <div className='p-img'>\r\n          <img\r\n            src='https://raw.githubusercontent.com/utkutekalmaz/react-contacts/master/pics/pic1.png'\r\n            alt='day'\r\n          />\r\n        </div>\r\n        <p className={'p-desc ' + (theme == 'day' ? 'day' : 'night')}>\r\n          A Fullstack MERN App\r\n          <br />\r\n          This is an old school phone book implementation on web; for\r\n          registering phone numbers and e-mails. Built with{' '}\r\n          <span className={'bld ' + (theme == 'day' ? 'day' : 'night')}>\r\n            React Js\r\n          </span>{' '}\r\n          on the front end of the application. The state of the app is managed\r\n          with{' '}\r\n          <span className={'bld ' + (theme == 'day' ? 'day' : 'night')}>\r\n            Context API\r\n          </span>{' '}\r\n          While{' '}\r\n          <span className={'bld ' + (theme == 'day' ? 'day' : 'night')}>\r\n            Axios\r\n          </span>{' '}\r\n          is used for requesting; adding, editing or removing contacts(CRUD\r\n          operations) are handled with{' '}\r\n          <span className={'bld ' + (theme == 'day' ? 'day' : 'night')}>\r\n            Express JS\r\n          </span>\r\n          . On the database side,{' '}\r\n          <span className={'bld ' + (theme == 'day' ? 'day' : 'night')}>\r\n            {' '}\r\n            MongoDb{' '}\r\n          </span>{' '}\r\n          was driven with\r\n          <span className={'bld ' + (theme == 'day' ? 'day' : 'night')}>\r\n            {' '}\r\n            Mongoose\r\n          </span>\r\n          . Mobile responsive and deployed to{' '}\r\n          <span className={'bld ' + (theme == 'day' ? 'day' : 'night')}>\r\n            Heroku\r\n          </span>\r\n          .\r\n        </p>\r\n        <p>\r\n          {' '}\r\n          <a\r\n            href='https://peaceful-basin-77750.herokuapp.com/register'\r\n            className={'p-demo bld ' + (theme == 'day' ? 'day' : 'night')}\r\n          >\r\n            Live Demo\r\n          </a>{' '}\r\n          <a\r\n            href='https://github.com/utkutekalmaz/react-contacts'\r\n            className={'p-code bld ' + (theme == 'day' ? 'day' : 'night')}\r\n          >\r\n            {' '}\r\n            {`{ Peek Code on Github }`}{' '}\r\n          </a>{' '}\r\n        </p>\r\n        <div className='seperator' />\r\n      </div>\r\n      {/*                      */}\r\n      <div className='project'>\r\n        <p className={'p-name ' + (theme == 'day' ? 'day' : 'night')}>\r\n          GitHub Repolister\r\n        </p>\r\n        <br />\r\n        <p className={'p-desc ' + (theme == 'day' ? 'day' : 'night')}>\r\n          An Android Github User Search App\r\n          <br />\r\n          <br />\r\n          Similar to the Github Finder React app, This is one too lists the\r\n          repositories of the user given and a few details about the selected\r\n          repository. Using the{' '}\r\n          <span className={'bld ' + (theme == 'day' ? 'day' : 'night')}>\r\n            Model-View-Presenter\r\n          </span>{' '}\r\n          pattern, and some third party libraries. Because of this, the app is\r\n          heavly dependent in{' '}\r\n          <span className={'bld ' + (theme == 'day' ? 'day' : 'night')}>\r\n            Interface\r\n          </span>{' '}\r\n          class.\r\n          <br />\r\n          The model is a POJO class made with{' '}\r\n          <span className={'bld ' + (theme == 'day' ? 'day' : 'night')}>\r\n            jsonschema2pojo\r\n          </span>{' '}\r\n          Most of the fields are not used in app, but they are implemented for\r\n          future use. <br />\r\n          Networking operations made with{' '}\r\n          <span className={'bld ' + (theme == 'day' ? 'day' : 'night')}>\r\n            Retrofit\r\n          </span>\r\n          , Repo detail page is made with a{' '}\r\n          <span className={'bld ' + (theme == 'day' ? 'day' : 'night')}>\r\n            Fragment\r\n          </span>\r\n          , which is called from the click listener of{' '}\r\n          <span className={'bld ' + (theme == 'day' ? 'day' : 'night')}>\r\n            RecyclerView\r\n          </span>\r\n          .{' '}\r\n          <span className={'bld ' + (theme == 'day' ? 'day' : 'night')}>\r\n            Glide\r\n          </span>{' '}\r\n          library was used for the avatar loading from the URL. Starring is\r\n          stored in{' '}\r\n          <span className={'bld ' + (theme == 'day' ? 'day' : 'night')}>\r\n            SharedPreferences\r\n          </span>\r\n          .\r\n        </p>\r\n        <p>\r\n          {' '}\r\n          <a\r\n            href='https://github.com/utkutekalmaz/github-repolister-android'\r\n            className={'p-demo bld ' + (theme == 'day' ? 'day' : 'night')}\r\n          >\r\n            <span style={{ fontStyle: 'italic' }}> NO </span> Live Demo\r\n          </a>{' '}\r\n          <a\r\n            href='https://github.com/utkutekalmaz/github-repolister-android'\r\n            className={'p-code bld ' + (theme == 'day' ? 'day' : 'night')}\r\n          >\r\n            {' '}\r\n            {`{ Peek Code on Github }`}{' '}\r\n          </a>{' '}\r\n        </p>\r\n        <div className='seperator' />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n","import React, { useState } from 'react';\r\nimport Menu from './Menu';\r\nimport { Fragment } from 'react';\r\nimport Projects from './Projects';\r\nimport ThemeContext from '../context/ThemeContext';\r\nimport { useContext } from 'react';\r\n\r\nconst Portfolio = () => {\r\n  const [menuOn, setMenuOn] = useState(false);\r\n  const themeContext = useContext(ThemeContext);\r\n  const { theme } = themeContext;\r\n\r\n  const trigger = () => {\r\n    setMenuOn(!menuOn);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Menu overlayOn={menuOn} menuOpen={trigger} />\r\n      <div className={'portfolio-box ' + (theme == 'day' ? '' : 'night')}>\r\n        <div className={'more-ptf ' + (theme == 'day' ? '' : 'night')}>\r\n          <a\r\n            onClick={trigger}\r\n            className={theme == 'day' ? 'more-day' : 'more-night'}\r\n          >\r\n            more... ¶\r\n          </a>\r\n        </div>\r\n        <Projects />\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Portfolio;\r\n","import React, { useState, Fragment } from 'react';\r\nimport Menu from './Menu';\r\nimport ThemeContext from '../context/ThemeContext';\r\nimport { useContext } from 'react';\r\n\r\nconst Gallery = () => {\r\n  const themeContext = useContext(ThemeContext);\r\n  const { theme } = themeContext;\r\n  const [menuOn, setMenuOn] = useState(false);\r\n\r\n  const trigger = () => {\r\n    setMenuOn(!menuOn);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Menu overlayOn={menuOn} menuOpen={trigger} />\r\n      <div className={theme == 'day' ? 'day' : 'night'}>\r\n        {' '}\r\n        this is{' '}\r\n        <span style={{ textDecoration: 'underline' }} className='bld'>\r\n          not\r\n        </span>{' '}\r\n        art{' '}\r\n      </div>\r\n      <div className={'mr-ptf ' + (theme == 'day' ? '' : 'night')}>\r\n        <a\r\n          onClick={trigger}\r\n          className={theme == 'day' ? 'more-day' : 'more-night'}\r\n        >\r\n          more... ¶\r\n        </a>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Gallery;\r\n","import React, { useContext } from 'react';\r\nimport { HashRouter, Route, Switch } from 'react-router-dom';\r\nimport Home from './Home';\r\nimport Menu from './Menu';\r\nimport Contact from './Contact';\r\nimport About from './About';\r\nimport Portfolio from './Portfolio';\r\nimport Gallery from './Gallery';\r\nimport ThemeContext from '../context/ThemeContext';\r\n\r\nexport const Container = () => {\r\n  // const [menuOpened, setMenuOpened] = useState(false);\r\n\r\n  const themeContext = useContext(ThemeContext);\r\n  const { theme, toggleTheme } = themeContext;\r\n\r\n  const handleChange = e => {\r\n    if (e.target.checked) {\r\n      toggleTheme('night');\r\n      console.log('check status: night: ' + e.target.checked);\r\n      document.body.style.background = '#52493c';\r\n    } else {\r\n      toggleTheme('day');\r\n      console.log('check status: day: ' + e.target.checked);\r\n      document.body.style.background = '#dcdcdc';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <HashRouter>\r\n      <div className='swc-group'>\r\n        <label className='swc-label'>\r\n          <div\r\n            className={\r\n              'swc-border ' +\r\n              (theme == 'day' ? 'swc-border-day' : 'swc-border-night')\r\n            }\r\n          >\r\n            <div\r\n              className={\r\n                'custom-swc ' + (theme == 'day' ? 'swc-day' : 'swc-night')\r\n              }\r\n            />\r\n          </div>\r\n          <span className={'swc-label ' + (theme == 'day' ? 'day' : 'night')}>\r\n            {theme == 'day' ? 'Day' : 'Night'}\r\n          </span>\r\n          <input\r\n            type='checkbox'\r\n            id='modeswc'\r\n            className={'swc-btn ' + (theme == 'day' ? 'day' : 'night')}\r\n            value='mode'\r\n            onClick={handleChange}\r\n          />\r\n        </label>\r\n      </div>\r\n      <div className={'main-container ' + (theme == 'day' ? '' : 'night')}>\r\n        <Switch>\r\n          <Route exact path='/' component={Home} />\r\n          <Route path='/contact' component={Contact} />\r\n          <Route path='/about' component={About} />\r\n          <Route path='/portfolio' component={Portfolio} />\r\n          <Route path='/gallery' component={Gallery} />\r\n          <Route render={() => <p>Not found</p>} />\r\n        </Switch>\r\n      </div>\r\n    </HashRouter>\r\n  );\r\n};\r\n","import React, { useContext, createContext } from 'react';\r\nimport ThemeContext from './ThemeContext';\r\nimport { SET_THEME } from './types';\r\nimport { useReducer } from 'react';\r\n\r\nconst ThemeState = props => {\r\n  const initialState = { theme: 'day' };\r\n  const themeReducer = (state, action) => {\r\n    switch (action.type) {\r\n      case SET_THEME:\r\n        return { ...state, theme: action.payload };\r\n    }\r\n  };\r\n  const [state, dispatch] = useReducer(themeReducer, initialState);\r\n\r\n  const toggleTheme = apptheme => {\r\n    dispatch({ type: SET_THEME, payload: apptheme });\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider\r\n      value={{\r\n        theme: state.theme,\r\n        toggleTheme\r\n      }}\r\n    >\r\n      {props.children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeState;\r\n","export const SET_THEME = 'SET_THEME';\r\n","import React from 'react';\nimport './App.css';\nimport { Container } from './comp/Container';\nimport moduleName from './context/ThemeState';\nimport ThemeState from './context/ThemeState';\n\nfunction App() {\n  return (\n    <ThemeState>\n      <div className='App'>\n        <Container />\n      </div>\n    </ThemeState>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}